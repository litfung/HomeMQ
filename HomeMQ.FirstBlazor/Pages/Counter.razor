@page "/counter"
@implements IDisposable
@using System.Timers
@using HomeMQ.Core.ViewModels
@inject CounterViewModel CounterViewModel

<h1>Counter</h1>

<p>Current count: @CounterViewModel.CounterService.CurrentCount</p>

@*<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>*@

@code {
    //private int currentCount = 0;

    //private void IncrementCount()
    //{
    //    currentCount++;

    //    Console.WriteLine($"Count incremented: {currentCount}");
    //}

    private Timer timer;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            timer = new Timer();
            timer.Interval = 1000;
            timer.Elapsed += OnTimerInterval;
            timer.AutoReset = true;
            timer.Enabled = true;
        }
        base.OnAfterRender(firstRender);
    }

    private void OnTimerInterval(object sender, ElapsedEventArgs e)
    {
        CounterViewModel.CounterService.IncrementCount();
        InvokeAsync(() => StateHasChanged());
    }

    public void Dispose()
    {
        timer?.Dispose();
    }

}
