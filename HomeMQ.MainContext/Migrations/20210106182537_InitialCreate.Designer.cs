// <auto-generated />
using System;
using HomeMQ.MainContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeMQ.MainContext.Migrations
{
    [DbContext(typeof(HomeMQMainContext))]
    [Migration("20210106182537_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("HomeMQ.MainContext.LocationSQL", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HomeMQ.MainContext.SensorSQL", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("MACAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SensorId");

                    b.HasIndex("LocationId");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("HomeMQ.MainContext.TemperatureReadingSQL", b =>
                {
                    b.Property<int>("ReadingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SensorId")
                        .HasColumnType("int");

                    b.Property<double>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("ReadingId");

                    b.HasIndex("SensorId");

                    b.ToTable("TemperatureReadings");
                });

            modelBuilder.Entity("HomeMQ.MainContext.SensorSQL", b =>
                {
                    b.HasOne("HomeMQ.MainContext.LocationSQL", "Location")
                        .WithMany("SensorSQLs")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("HomeMQ.MainContext.TemperatureReadingSQL", b =>
                {
                    b.HasOne("HomeMQ.MainContext.SensorSQL", "Sensor")
                        .WithMany("TemperatureReadingSQLs")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("HomeMQ.MainContext.LocationSQL", b =>
                {
                    b.Navigation("SensorSQLs");
                });

            modelBuilder.Entity("HomeMQ.MainContext.SensorSQL", b =>
                {
                    b.Navigation("TemperatureReadingSQLs");
                });
#pragma warning restore 612, 618
        }
    }
}
